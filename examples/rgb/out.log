Running coalPass on function:	_Z34rgb_increase_brightness_pass_readyPiS_if
Inspecting Store:	  store ptr %0, ptr %11, align 8
Store value operand is not LoadInst
Inspecting Store:	  store ptr %1, ptr %12, align 8
Store value operand is not LoadInst
Inspecting Store:	  store i32 %2, ptr %13, align 4
Store value operand is not LoadInst
Inspecting Store:	  store float %3, ptr %14, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %21, ptr %15, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %22, ptr %16, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %29, ptr %34, align 4
Considering load:	  %29 = load i32, ptr %28, align 4
root:	  %27 = sext i32 %26 to i64
root:	  %26 = add nsw i32 %25, 0
root:	  %25 = mul nsw i32 3, %24
root:	i32 3
root:	  %24 = load i32, ptr %15, align 4
root:	  %15 = alloca i32, align 4
root:	  %21 = add i32 %19, %20
root:	  %19 = mul i32 %17, %18
root:	  %17 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
root:	  %18 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
root:	  %20 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store value op resolved after createCoalLoadOrNo.
root:	  %33 = sext i32 %32 to i64
root:	  %32 = add nsw i32 %31, 0
root:	  %31 = mul nsw i32 3, %30
root:	i32 3
root:	  %30 = load i32, ptr %16, align 4
root:	  %16 = alloca i32, align 4
root:	  %22 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store pointer op resolved.
Inspecting Store:	  store i32 %41, ptr %46, align 4
Considering load:	  %41 = load i32, ptr %40, align 4
root:	  %39 = sext i32 %38 to i64
root:	  %38 = add nsw i32 %37, 1
root:	  %37 = mul nsw i32 3, %36
root:	i32 3
root:	  %36 = load i32, ptr %15, align 4
root:	  %15 = alloca i32, align 4
root:	  %21 = add i32 %19, %20
root:	  %19 = mul i32 %17, %18
root:	  %17 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
root:	  %18 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
root:	  %20 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store value op resolved after createCoalLoadOrNo.
root:	  %45 = sext i32 %44 to i64
root:	  %44 = add nsw i32 %43, 1
root:	  %43 = mul nsw i32 3, %42
root:	i32 3
root:	  %42 = load i32, ptr %16, align 4
root:	  %16 = alloca i32, align 4
root:	  %22 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store pointer op resolved.
Inspecting Store:	  store i32 %53, ptr %58, align 4
Considering load:	  %53 = load i32, ptr %52, align 4
root:	  %51 = sext i32 %50 to i64
root:	  %50 = add nsw i32 %49, 2
root:	  %49 = mul nsw i32 3, %48
root:	i32 3
root:	  %48 = load i32, ptr %15, align 4
root:	  %15 = alloca i32, align 4
root:	  %21 = add i32 %19, %20
root:	  %19 = mul i32 %17, %18
root:	  %17 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
root:	  %18 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
root:	  %20 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store value op resolved after createCoalLoadOrNo.
root:	  %57 = sext i32 %56 to i64
root:	  %56 = add nsw i32 %55, 2
root:	  %55 = mul nsw i32 3, %54
root:	i32 3
root:	  %54 = load i32, ptr %16, align 4
root:	  %16 = alloca i32, align 4
root:	  %22 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store pointer op resolved.
Inspecting Store:	  store i32 255, ptr %5, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %68, ptr %6, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %72, ptr %77, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 255, ptr %7, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %87, ptr %8, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %91, ptr %96, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 255, ptr %9, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %106, ptr %10, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %110, ptr %115, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %121, ptr %127, align 4
Considering load:	  %121 = load i32, ptr %120, align 4
root:	  %119 = sext i32 %118 to i64
root:	  %118 = add nsw i32 %117, 0
root:	  %117 = mul nsw i32 3, %116
root:	i32 3
root:	  %116 = load i32, ptr %16, align 4
root:	  %16 = alloca i32, align 4
root:	  %22 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store value op resolved after createCoalLoadOrNo.
root:	  %126 = sext i32 %125 to i64
root:	  %125 = add nsw i32 %124, 0
root:	  %124 = mul nsw i32 3, %123
root:	i32 3
root:	  %123 = load i32, ptr %15, align 4
root:	  %15 = alloca i32, align 4
root:	  %21 = add i32 %19, %20
root:	  %19 = mul i32 %17, %18
root:	  %17 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
root:	  %18 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
root:	  %20 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store pointer op resolved.
Inspecting Store:	  store i32 %133, ptr %139, align 4
Considering load:	  %133 = load i32, ptr %132, align 4
root:	  %131 = sext i32 %130 to i64
root:	  %130 = add nsw i32 %129, 1
root:	  %129 = mul nsw i32 3, %128
root:	i32 3
root:	  %128 = load i32, ptr %16, align 4
root:	  %16 = alloca i32, align 4
root:	  %22 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store value op resolved after createCoalLoadOrNo.
root:	  %138 = sext i32 %137 to i64
root:	  %137 = add nsw i32 %136, 1
root:	  %136 = mul nsw i32 3, %135
root:	i32 3
root:	  %135 = load i32, ptr %15, align 4
root:	  %15 = alloca i32, align 4
root:	  %21 = add i32 %19, %20
root:	  %19 = mul i32 %17, %18
root:	  %17 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
root:	  %18 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
root:	  %20 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store pointer op resolved.
Inspecting Store:	  store i32 %145, ptr %151, align 4
Considering load:	  %145 = load i32, ptr %144, align 4
root:	  %143 = sext i32 %142 to i64
root:	  %142 = add nsw i32 %141, 2
root:	  %141 = mul nsw i32 3, %140
root:	i32 3
root:	  %140 = load i32, ptr %16, align 4
root:	  %16 = alloca i32, align 4
root:	  %22 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store value op resolved after createCoalLoadOrNo.
root:	  %150 = sext i32 %149 to i64
root:	  %149 = add nsw i32 %148, 2
root:	  %148 = mul nsw i32 3, %147
root:	i32 3
root:	  %147 = load i32, ptr %15, align 4
root:	  %15 = alloca i32, align 4
root:	  %21 = add i32 %19, %20
root:	  %19 = mul i32 %17, %18
root:	  %17 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
root:	  %18 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
root:	  %20 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
store pointer op resolved.
<<<<<<<<<<<<<<<<<<	All CoalStores	>>>>>>>>>>>>>>>>>>
  store i32 %29, ptr %34, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[LocalThreadIdx]
------------------------------------
  store i32 %41, ptr %46, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[LocalThreadIdx]
------------------------------------
  store i32 %53, ptr %58, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[LocalThreadIdx]
------------------------------------
  store i32 %121, ptr %127, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[GlobalTID]
------------------------------------
  store i32 %133, ptr %139, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[GlobalTID]
------------------------------------
  store i32 %145, ptr %151, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[GlobalTID]
------------------------------------
<<<<<<<<<<<<<<<<<<	All CoalStores Ends	>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<	CoalStoreGroup 1 Starts	>>>>>>>>>>>>>>>>>>
  store i32 %29, ptr %34, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[LocalThreadIdx]
  store i32 %41, ptr %46, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[LocalThreadIdx]
  store i32 %53, ptr %58, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[LocalThreadIdx]
<<<<<<<<<<<<<<<<<<	CoalStoreGroup 1 Ends	>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<	CoalStoreGroup 2 Starts	>>>>>>>>>>>>>>>>>>
  store i32 %121, ptr %127, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[GlobalTID]
  store i32 %133, ptr %139, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[GlobalTID]
  store i32 %145, ptr %151, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[GlobalTID]
<<<<<<<<<<<<<<<<<<	CoalStoreGroup 2 Ends	>>>>>>>>>>>>>>>>>>
Stride: 3	inserting offset: 0
Stride: 3	inserting offset: 1
Stride: 3	inserting offset: 2
Removing offset:	0
Removing offset:	1
Removing offset:	2
new address offset [1]:	  %valLoadNewOffsetWithOffset1 = add i32 %valLoadNewOffsetBase1, 0
new GEP for Load:	  %28 = getelementptr inbounds i32, ptr %23, i32 %valLoadNewOffsetWithOffset1
new GEP offset for Store ptr Op shared memory:	  %storePtrGEPNewOffset1 = add i32 %storePtrGEPNewOffsetBase1, 0
new address offset [2]:	  %valLoadNewOffsetWithOffset2 = add i32 %valLoadNewOffsetBase2, 1
new GEP for Load:	  %40 = getelementptr inbounds i32, ptr %35, i32 %valLoadNewOffsetWithOffset2
new GEP offset for Store ptr Op shared memory:	  %storePtrGEPNewOffset2 = add i32 %storePtrGEPNewOffsetBase2, 1
new address offset [3]:	  %valLoadNewOffsetWithOffset3 = add i32 %valLoadNewOffsetBase3, 2
new GEP for Load:	  %52 = getelementptr inbounds i32, ptr %47, i32 %valLoadNewOffsetWithOffset3
new GEP offset for Store ptr Op shared memory:	  %storePtrGEPNewOffset3 = add i32 %storePtrGEPNewOffsetBase3, 2
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca float, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store ptr %0, ptr %11, align 8
  store ptr %1, ptr %12, align 8
  store i32 %2, ptr %13, align 4
  store float %3, ptr %14, align 4
  %17 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
  %18 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
  %19 = mul i32 %17, %18
  %20 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
  %multDimIndex = mul i32 %18, %17
  %GlobalTID = add i32 %multDimIndex, %20
  %"multDimIndexScaled#3" = mul i32 %multDimIndex, 3
  %"GlobalTIDScaled#3" = add i32 %"multDimIndexScaled#3", %20
  %21 = add i32 %19, %20
  store i32 %21, ptr %15, align 4
  %22 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
  store i32 %22, ptr %16, align 4
  %23 = load ptr, ptr %12, align 8
  %24 = load i32, ptr %15, align 4
  %25 = mul nsw i32 3, %24
  %26 = add nsw i32 %25, 0
  %27 = sext i32 %26 to i64
  %valLoadNewOffsetBase1 = add i32 %"GlobalTIDScaled#3", %18
  %valLoadNewOffsetWithOffset1 = add i32 %valLoadNewOffsetBase1, 0
  %28 = getelementptr inbounds i32, ptr %23, i32 %valLoadNewOffsetWithOffset1
  %29 = load i32, ptr %28, align 4
  %30 = load i32, ptr %16, align 4
  %31 = mul nsw i32 3, %30
  %32 = add nsw i32 %31, 0
  %33 = sext i32 %32 to i64
  %storePtrGEPNewOffsetBase1 = add i32 %20, %18
  %storePtrGEPNewOffset1 = add i32 %storePtrGEPNewOffsetBase1, 0
  %34 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i32 %storePtrGEPNewOffset1
  store i32 %29, ptr %34, align 4
  call void @llvm.nvvm.barrier0()
  %35 = load ptr, ptr %12, align 8
  %36 = load i32, ptr %15, align 4
  %37 = mul nsw i32 3, %36
  %38 = add nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %valLoadNewOffsetBase2 = add i32 %"GlobalTIDScaled#3", %18
  %valLoadNewOffsetWithOffset2 = add i32 %valLoadNewOffsetBase2, 1
  %40 = getelementptr inbounds i32, ptr %35, i32 %valLoadNewOffsetWithOffset2
  %41 = load i32, ptr %40, align 4
  %42 = load i32, ptr %16, align 4
  %43 = mul nsw i32 3, %42
  %44 = add nsw i32 %43, 1
  %45 = sext i32 %44 to i64
  %storePtrGEPNewOffsetBase2 = add i32 %20, %18
  %storePtrGEPNewOffset2 = add i32 %storePtrGEPNewOffsetBase2, 1
  %46 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i32 %storePtrGEPNewOffset2
  store i32 %41, ptr %46, align 4
  call void @llvm.nvvm.barrier0()
  %47 = load ptr, ptr %12, align 8
  %48 = load i32, ptr %15, align 4
  %49 = mul nsw i32 3, %48
  %50 = add nsw i32 %49, 2
  %51 = sext i32 %50 to i64
  %valLoadNewOffsetBase3 = add i32 %"GlobalTIDScaled#3", %18
  %valLoadNewOffsetWithOffset3 = add i32 %valLoadNewOffsetBase3, 2
  %52 = getelementptr inbounds i32, ptr %47, i32 %valLoadNewOffsetWithOffset3
  %53 = load i32, ptr %52, align 4
  %54 = load i32, ptr %16, align 4
  %55 = mul nsw i32 3, %54
  %56 = add nsw i32 %55, 2
  %57 = sext i32 %56 to i64
  %storePtrGEPNewOffsetBase3 = add i32 %20, %18
  %storePtrGEPNewOffset3 = add i32 %storePtrGEPNewOffsetBase3, 2
  %58 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i32 %storePtrGEPNewOffset3
  store i32 %53, ptr %58, align 4
  call void @llvm.nvvm.barrier0()
  %59 = load float, ptr %14, align 4
  %60 = load i32, ptr %16, align 4
  %61 = mul nsw i32 3, %60
  %62 = add nsw i32 %61, 0
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i64 %63
  %65 = load i32, ptr %64, align 4
  %66 = sitofp i32 %65 to float
  %67 = fmul contract float %59, %66
  %68 = fptosi float %67 to i32
  store i32 255, ptr %5, align 4
  store i32 %68, ptr %6, align 4
  %69 = load i32, ptr %5, align 4
  %70 = load i32, ptr %6, align 4
  %71 = icmp sle i32 %69, %70
  %72 = select i1 %71, i32 %69, i32 %70
  %73 = load i32, ptr %16, align 4
  %74 = mul nsw i32 3, %73
  %75 = add nsw i32 %74, 0
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %76
  store i32 %72, ptr %77, align 4
  %78 = load float, ptr %14, align 4
  %79 = load i32, ptr %16, align 4
  %80 = mul nsw i32 3, %79
  %81 = add nsw i32 %80, 1
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i64 %82
  %84 = load i32, ptr %83, align 4
  %85 = sitofp i32 %84 to float
  %86 = fmul contract float %78, %85
  %87 = fptosi float %86 to i32
  store i32 255, ptr %7, align 4
  store i32 %87, ptr %8, align 4
  %88 = load i32, ptr %7, align 4
  %89 = load i32, ptr %8, align 4
  %90 = icmp sle i32 %88, %89
  %91 = select i1 %90, i32 %88, i32 %89
  %92 = load i32, ptr %16, align 4
  %93 = mul nsw i32 3, %92
  %94 = add nsw i32 %93, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %95
  store i32 %91, ptr %96, align 4
  %97 = load float, ptr %14, align 4
  %98 = load i32, ptr %16, align 4
  %99 = mul nsw i32 3, %98
  %100 = add nsw i32 %99, 2
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i64 %101
  %103 = load i32, ptr %102, align 4
  %104 = sitofp i32 %103 to float
  %105 = fmul contract float %97, %104
  %106 = fptosi float %105 to i32
  store i32 255, ptr %9, align 4
  store i32 %106, ptr %10, align 4
  %107 = load i32, ptr %9, align 4
  %108 = load i32, ptr %10, align 4
  %109 = icmp sle i32 %107, %108
  %110 = select i1 %109, i32 %107, i32 %108
  %111 = load i32, ptr %16, align 4
  %112 = mul nsw i32 3, %111
  %113 = add nsw i32 %112, 2
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %114
  store i32 %110, ptr %115, align 4
  call void @llvm.nvvm.barrier0()
  %116 = load i32, ptr %16, align 4
  %117 = mul nsw i32 3, %116
  %118 = add nsw i32 %117, 0
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %119
  %121 = load i32, ptr %120, align 4
  %122 = load ptr, ptr %11, align 8
  %123 = load i32, ptr %15, align 4
  %124 = mul nsw i32 3, %123
  %125 = add nsw i32 %124, 0
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i32, ptr %122, i64 %126
  store i32 %121, ptr %127, align 4
  call void @llvm.nvvm.barrier0()
  %128 = load i32, ptr %16, align 4
  %129 = mul nsw i32 3, %128
  %130 = add nsw i32 %129, 1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %131
  %133 = load i32, ptr %132, align 4
  %134 = load ptr, ptr %11, align 8
  %135 = load i32, ptr %15, align 4
  %136 = mul nsw i32 3, %135
  %137 = add nsw i32 %136, 1
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i32, ptr %134, i64 %138
  store i32 %133, ptr %139, align 4
  call void @llvm.nvvm.barrier0()
  %140 = load i32, ptr %16, align 4
  %141 = mul nsw i32 3, %140
  %142 = add nsw i32 %141, 2
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %143
  %145 = load i32, ptr %144, align 4
  %146 = load ptr, ptr %11, align 8
  %147 = load i32, ptr %15, align 4
  %148 = mul nsw i32 3, %147
  %149 = add nsw i32 %148, 2
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i32, ptr %146, i64 %150
  store i32 %145, ptr %151, align 4
  ret void
<<<<<<<<<<<<<<<<<<	CoalStoreGroup 1 Starts	>>>>>>>>>>>>>>>>>>
  store i32 %29, ptr %34, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[LocalThreadIdx]
  store i32 %41, ptr %46, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[LocalThreadIdx]
  store i32 %53, ptr %58, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Arg ]	Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[GlobalTID]

Ptr Dest of Store:
Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src]	@_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src = internal addrspace(3) global [1536 x i32] undef, align 4
Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[LocalThreadIdx]
<<<<<<<<<<<<<<<<<<	CoalStoreGroup 1 Ends	>>>>>>>>>>>>>>>>>>
Transformed Successfully!
Stride: 3	inserting offset: 0
Stride: 3	inserting offset: 1
Stride: 3	inserting offset: 2
Removing offset:	0
Removing offset:	1
Removing offset:	2
new address offset [1]:	  %valLoadNewOffsetWithOffset12 = add i32 %valLoadNewOffsetBase11, 0
new GEP for Load shared memory:	  %120 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i32 %valLoadNewOffsetWithOffset12
new GEP offset for Store ptr Op:	  %storePtrGEPNewOffset14 = add i32 %storePtrGEPNewOffsetBase13, 0
new address offset [2]:	  %valLoadNewOffsetWithOffset26 = add i32 %valLoadNewOffsetBase25, 1
new GEP for Load shared memory:	  %132 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i32 %valLoadNewOffsetWithOffset26
new GEP offset for Store ptr Op:	  %storePtrGEPNewOffset28 = add i32 %storePtrGEPNewOffsetBase27, 1
new address offset [3]:	  %valLoadNewOffsetWithOffset310 = add i32 %valLoadNewOffsetBase39, 2
new GEP for Load shared memory:	  %144 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i32 %valLoadNewOffsetWithOffset310
new GEP offset for Store ptr Op:	  %storePtrGEPNewOffset312 = add i32 %storePtrGEPNewOffsetBase311, 2
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca i32, align 4
  %14 = alloca float, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store ptr %0, ptr %11, align 8
  store ptr %1, ptr %12, align 8
  store i32 %2, ptr %13, align 4
  store float %3, ptr %14, align 4
  %17 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x()
  %18 = call i32 @llvm.nvvm.read.ptx.sreg.ntid.x()
  %19 = mul i32 %17, %18
  %20 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
  %multDimIndex = mul i32 %18, %17
  %GlobalTID = add i32 %multDimIndex, %20
  %"multDimIndexScaled#3" = mul i32 %multDimIndex, 3
  %"GlobalTIDScaled#3" = add i32 %"multDimIndexScaled#3", %20
  %21 = add i32 %19, %20
  store i32 %21, ptr %15, align 4
  %22 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x()
  store i32 %22, ptr %16, align 4
  %23 = load ptr, ptr %12, align 8
  %24 = load i32, ptr %15, align 4
  %25 = mul nsw i32 3, %24
  %26 = add nsw i32 %25, 0
  %27 = sext i32 %26 to i64
  %valLoadNewOffsetBase1 = add i32 %"GlobalTIDScaled#3", %18
  %valLoadNewOffsetWithOffset1 = add i32 %valLoadNewOffsetBase1, 0
  %28 = getelementptr inbounds i32, ptr %23, i32 %valLoadNewOffsetWithOffset1
  %29 = load i32, ptr %28, align 4
  %30 = load i32, ptr %16, align 4
  %31 = mul nsw i32 3, %30
  %32 = add nsw i32 %31, 0
  %33 = sext i32 %32 to i64
  %storePtrGEPNewOffsetBase1 = add i32 %20, %18
  %storePtrGEPNewOffset1 = add i32 %storePtrGEPNewOffsetBase1, 0
  %34 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i32 %storePtrGEPNewOffset1
  store i32 %29, ptr %34, align 4
  call void @llvm.nvvm.barrier0()
  %35 = load ptr, ptr %12, align 8
  %36 = load i32, ptr %15, align 4
  %37 = mul nsw i32 3, %36
  %38 = add nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %valLoadNewOffsetBase2 = add i32 %"GlobalTIDScaled#3", %18
  %valLoadNewOffsetWithOffset2 = add i32 %valLoadNewOffsetBase2, 1
  %40 = getelementptr inbounds i32, ptr %35, i32 %valLoadNewOffsetWithOffset2
  %41 = load i32, ptr %40, align 4
  %42 = load i32, ptr %16, align 4
  %43 = mul nsw i32 3, %42
  %44 = add nsw i32 %43, 1
  %45 = sext i32 %44 to i64
  %storePtrGEPNewOffsetBase2 = add i32 %20, %18
  %storePtrGEPNewOffset2 = add i32 %storePtrGEPNewOffsetBase2, 1
  %46 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i32 %storePtrGEPNewOffset2
  store i32 %41, ptr %46, align 4
  call void @llvm.nvvm.barrier0()
  %47 = load ptr, ptr %12, align 8
  %48 = load i32, ptr %15, align 4
  %49 = mul nsw i32 3, %48
  %50 = add nsw i32 %49, 2
  %51 = sext i32 %50 to i64
  %valLoadNewOffsetBase3 = add i32 %"GlobalTIDScaled#3", %18
  %valLoadNewOffsetWithOffset3 = add i32 %valLoadNewOffsetBase3, 2
  %52 = getelementptr inbounds i32, ptr %47, i32 %valLoadNewOffsetWithOffset3
  %53 = load i32, ptr %52, align 4
  %54 = load i32, ptr %16, align 4
  %55 = mul nsw i32 3, %54
  %56 = add nsw i32 %55, 2
  %57 = sext i32 %56 to i64
  %storePtrGEPNewOffsetBase3 = add i32 %20, %18
  %storePtrGEPNewOffset3 = add i32 %storePtrGEPNewOffsetBase3, 2
  %58 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i32 %storePtrGEPNewOffset3
  store i32 %53, ptr %58, align 4
  call void @llvm.nvvm.barrier0()
  %59 = load float, ptr %14, align 4
  %60 = load i32, ptr %16, align 4
  %61 = mul nsw i32 3, %60
  %62 = add nsw i32 %61, 0
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i64 %63
  %65 = load i32, ptr %64, align 4
  %66 = sitofp i32 %65 to float
  %67 = fmul contract float %59, %66
  %68 = fptosi float %67 to i32
  store i32 255, ptr %5, align 4
  store i32 %68, ptr %6, align 4
  %69 = load i32, ptr %5, align 4
  %70 = load i32, ptr %6, align 4
  %71 = icmp sle i32 %69, %70
  %72 = select i1 %71, i32 %69, i32 %70
  %73 = load i32, ptr %16, align 4
  %74 = mul nsw i32 3, %73
  %75 = add nsw i32 %74, 0
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %76
  store i32 %72, ptr %77, align 4
  %78 = load float, ptr %14, align 4
  %79 = load i32, ptr %16, align 4
  %80 = mul nsw i32 3, %79
  %81 = add nsw i32 %80, 1
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i64 %82
  %84 = load i32, ptr %83, align 4
  %85 = sitofp i32 %84 to float
  %86 = fmul contract float %78, %85
  %87 = fptosi float %86 to i32
  store i32 255, ptr %7, align 4
  store i32 %87, ptr %8, align 4
  %88 = load i32, ptr %7, align 4
  %89 = load i32, ptr %8, align 4
  %90 = icmp sle i32 %88, %89
  %91 = select i1 %90, i32 %88, i32 %89
  %92 = load i32, ptr %16, align 4
  %93 = mul nsw i32 3, %92
  %94 = add nsw i32 %93, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %95
  store i32 %91, ptr %96, align 4
  %97 = load float, ptr %14, align 4
  %98 = load i32, ptr %16, align 4
  %99 = mul nsw i32 3, %98
  %100 = add nsw i32 %99, 2
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_src to ptr), i64 0, i64 %101
  %103 = load i32, ptr %102, align 4
  %104 = sitofp i32 %103 to float
  %105 = fmul contract float %97, %104
  %106 = fptosi float %105 to i32
  store i32 255, ptr %9, align 4
  store i32 %106, ptr %10, align 4
  %107 = load i32, ptr %9, align 4
  %108 = load i32, ptr %10, align 4
  %109 = icmp sle i32 %107, %108
  %110 = select i1 %109, i32 %107, i32 %108
  %111 = load i32, ptr %16, align 4
  %112 = mul nsw i32 3, %111
  %113 = add nsw i32 %112, 2
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i64 %114
  store i32 %110, ptr %115, align 4
  call void @llvm.nvvm.barrier0()
  %116 = load i32, ptr %16, align 4
  %117 = mul nsw i32 3, %116
  %118 = add nsw i32 %117, 0
  %119 = sext i32 %118 to i64
  %valLoadNewOffsetBase11 = add i32 %20, %18
  %valLoadNewOffsetWithOffset12 = add i32 %valLoadNewOffsetBase11, 0
  %120 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i32 %valLoadNewOffsetWithOffset12
  %121 = load i32, ptr %120, align 4
  %122 = load ptr, ptr %11, align 8
  %123 = load i32, ptr %15, align 4
  %124 = mul nsw i32 3, %123
  %125 = add nsw i32 %124, 0
  %126 = sext i32 %125 to i64
  %storePtrGEPNewOffsetBase13 = add i32 %"GlobalTIDScaled#3", %18
  %storePtrGEPNewOffset14 = add i32 %storePtrGEPNewOffsetBase13, 0
  %127 = getelementptr inbounds i32, ptr %122, i32 %storePtrGEPNewOffset14
  store i32 %121, ptr %127, align 4
  call void @llvm.nvvm.barrier0()
  %128 = load i32, ptr %16, align 4
  %129 = mul nsw i32 3, %128
  %130 = add nsw i32 %129, 1
  %131 = sext i32 %130 to i64
  %valLoadNewOffsetBase25 = add i32 %20, %18
  %valLoadNewOffsetWithOffset26 = add i32 %valLoadNewOffsetBase25, 1
  %132 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i32 %valLoadNewOffsetWithOffset26
  %133 = load i32, ptr %132, align 4
  %134 = load ptr, ptr %11, align 8
  %135 = load i32, ptr %15, align 4
  %136 = mul nsw i32 3, %135
  %137 = add nsw i32 %136, 1
  %138 = sext i32 %137 to i64
  %storePtrGEPNewOffsetBase27 = add i32 %"GlobalTIDScaled#3", %18
  %storePtrGEPNewOffset28 = add i32 %storePtrGEPNewOffsetBase27, 1
  %139 = getelementptr inbounds i32, ptr %134, i32 %storePtrGEPNewOffset28
  store i32 %133, ptr %139, align 4
  call void @llvm.nvvm.barrier0()
  %140 = load i32, ptr %16, align 4
  %141 = mul nsw i32 3, %140
  %142 = add nsw i32 %141, 2
  %143 = sext i32 %142 to i64
  %valLoadNewOffsetBase39 = add i32 %20, %18
  %valLoadNewOffsetWithOffset310 = add i32 %valLoadNewOffsetBase39, 2
  %144 = getelementptr inbounds [1536 x i32], ptr addrspacecast (ptr addrspace(3) @_ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst to ptr), i64 0, i32 %valLoadNewOffsetWithOffset310
  %145 = load i32, ptr %144, align 4
  %146 = load ptr, ptr %11, align 8
  %147 = load i32, ptr %15, align 4
  %148 = mul nsw i32 3, %147
  %149 = add nsw i32 %148, 2
  %150 = sext i32 %149 to i64
  %storePtrGEPNewOffsetBase311 = add i32 %"GlobalTIDScaled#3", %18
  %storePtrGEPNewOffset312 = add i32 %storePtrGEPNewOffsetBase311, 2
  %151 = getelementptr inbounds i32, ptr %146, i32 %storePtrGEPNewOffset312
  store i32 %145, ptr %151, align 4
  ret void
<<<<<<<<<<<<<<<<<<	CoalStoreGroup 2 Starts	>>>>>>>>>>>>>>>>>>
  store i32 %121, ptr %127, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 0]	[GlobalTID]
  store i32 %133, ptr %139, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 1]	[GlobalTID]
  store i32 %145, ptr %151, align 4	has potential to be coalesced.
Value Source from Load:	Ptr Source: [Global _ZZ34rgb_increase_brightness_pass_readyPiS_ifE14pixel_smem_dst]	Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[LocalThreadIdx]

Ptr Dest of Store:
Ptr Source: [Arg ]	ptr %0
Ptr Offset: [Stride = 3]	[StrideOffset = 2]	[GlobalTID]
<<<<<<<<<<<<<<<<<<	CoalStoreGroup 2 Ends	>>>>>>>>>>>>>>>>>>
Transformed Successfully!
Running coalPass on function:	_Z44rgb_increase_brightness_pass_ready_coalescedPiS_if
Inspecting Store:	  store ptr %0, ptr %11, align 8
Store value operand is not LoadInst
Inspecting Store:	  store ptr %1, ptr %12, align 8
Store value operand is not LoadInst
Inspecting Store:	  store i32 %2, ptr %13, align 4
Store value operand is not LoadInst
Inspecting Store:	  store float %3, ptr %14, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %22, ptr %15, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %23, ptr %16, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %31, ptr %37, align 4
Considering load:	  %31 = load i32, ptr %30, align 4
root:	  %29 = zext i32 %28 to i64
Cannot create CoalLoad.
Inspecting Store:	  store i32 %45, ptr %51, align 4
Considering load:	  %45 = load i32, ptr %44, align 4
root:	  %43 = zext i32 %42 to i64
Cannot create CoalLoad.
Inspecting Store:	  store i32 %59, ptr %65, align 4
Considering load:	  %59 = load i32, ptr %58, align 4
root:	  %57 = zext i32 %56 to i64
Cannot create CoalLoad.
Inspecting Store:	  store i32 255, ptr %5, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %75, ptr %6, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %79, ptr %84, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 255, ptr %7, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %94, ptr %8, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %98, ptr %103, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 255, ptr %9, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %113, ptr %10, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %117, ptr %122, align 4
Store value operand is not LoadInst
Inspecting Store:	  store i32 %129, ptr %136, align 4
Considering load:	  %129 = load i32, ptr %128, align 4
root:	  %127 = zext i32 %126 to i64
Cannot create CoalLoad.
Inspecting Store:	  store i32 %143, ptr %150, align 4
Considering load:	  %143 = load i32, ptr %142, align 4
root:	  %141 = zext i32 %140 to i64
Cannot create CoalLoad.
Inspecting Store:	  store i32 %157, ptr %164, align 4
Considering load:	  %157 = load i32, ptr %156, align 4
root:	  %155 = zext i32 %154 to i64
Cannot create CoalLoad.
<<<<<<<<<<<<<<<<<<	All CoalStores	>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<	All CoalStores Ends	>>>>>>>>>>>>>>>>>>
